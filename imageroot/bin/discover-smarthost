#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import agent
import os
import json

# Connect the local Redis replica. This is necessary to consistently start
# the service if the leader node is not reachable:
rdb = agent.redis_connect(host='127.0.0.1')
smtp_settings = agent.get_smarthost_settings(rdb)

envfile = "smarthost.env"

# Using .tmp suffix: do not overwrite the target file until the new one is
# saved to disk:
if not smtp_settings['host']:
    f = open(envfile, "w")
    f.write("")
    f.close
    sys.exit(0)

with open('config.json', 'r') as cf:
    config = json.loads(cf.read())

domain = config['host'].split('.',1)[1]

with open(envfile + ".tmp", "w") as efp:
    print(f"SMTP_HOST={smtp_settings['host']}", file=efp)
    print(f"SMTP_PORT={smtp_settings['port']}", file=efp)
    print(f"MAIL_DOMAIN={domain}", file=efp)
    print(f"MAIL_FROM_ADDRESS=no-reply", file=efp)
    if smtp_settings['password'] != 'none':
        print(f"SMTP_SECURE={smtp_settings['encrypt_smtp']}", file=efp)
    if smtp_settings['username'] and smtp_settings['password']:
        print(f"SMTP_NAME={smtp_settings['username']}", file=efp)
        print(f"SMTP_PASSWORD={smtp_settings['password']}", file=efp)
        print("SMTP_AUTHTYPE=LOGIN", file=efp)
    else:
        print("SMTP_AUTHTYPE=PLAIN", file=efp)

# Commit changes by replacing the existing envfile:
os.replace(envfile + ".tmp", envfile)
